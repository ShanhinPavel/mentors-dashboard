{"version":3,"sources":["styles/select.js","components/Select/View.js","Utils/compare.js","components/Select/Controller.js","styles/table.js","components/Table/View.js","components/Table/utils/getTaskColorStatus.js","components/Table/utils/getRowsOfTasks.js","components/Table/utils/getStudTaskColorStatus.js","components/Table/utils/getRowsOfStudentsTasks.js","components/Table/Controller.js","components/Table/index.js","components/Select/index.js","styles/header.js","styles/login.js","components/Log-in/index.js","styles/logout.js","components/Log-out/index.js","components/Header/View.js","components/Header/index.js","styles/app.js","styles/designations.js","components/Designations/View.js","components/Designations/utils/getListMarkedWithColor.js","components/Designations/Controller.js","components/Designations/data/data.js","components/Designations/index.js","components/Info/data/data.js","components/Info/index.js","components/App/index.js","components/App/utils/checkMentorName.js","serviceWorker.js","Utils/getMentorFromLocalstorage.js","index.js"],"names":["selectContainer","display","flexDirection","width","minWidth","height","border","fontSize","mentorP","textAlign","margin","paddingTop","borderRight","backgroundColor","select","containerStyle","justifyContent","minHeight","alignItems","View","props","onChange","optionElements","react_default","a","createElement","style","id","compare","b","getOptions","collection","selectedElement","slice","sort","map","element","index","value","key","concat","selected","Controller","options","Select_View","e","github","target","localStorage","setItem","JSON","stringify","mentorGithub","table","marginBottom","tableHeader","borderBottom","headerTaskColumn","widht","headerStudentsColumn","tableBody","tasksColumn","taskRow","borderTop","studentsColumn","studentColumn","borderLeft","emptyCell","color","rowsOfTasks","rowsOfStudentTasks","className","getTaskColorStatus","taskStatus","tasksStyle","getRowsOfTasks","objectOfTasks","tasksRows","listOfTasks","titleOfTask","taskIndex","taskObject","title","link","status","taskId","colorStatus","href","rel","getStudTaskColorStatus","studentTaskStatus","mark","background","getRowsOfStudentsTasks","objectOfMentor","listOfStudents","students","nameOfStudent","student","githubLink","tasks","studentId","studentTasks","tasksTitle","index1","currentTask","pullRequest","taskNumber","mentorObject","Table_View","Table","Table_Controller","Select","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","handleChange","bind","assertThisInitialized","newName","setState","_this$props","data","mentor","mentors","Select_Controller","components_Table","selectedMentor","React","Component","headerButton","maxWidth","minheight","headerP","marginRight","Login","onClickLogin","change","message","type","onClick","Logout","onClickLogout","userName","userStatus","marginLeft","Log_in","Log_out","Header","login","logout","event","inputText","changePermission","info","Header_View","appStyle","tableWraper","designationContainer","desinationTitle","listContainer","listTitle","tasksMarkers","studentMarkers","colorContainer","getListMarkedWithColor","keys","coloredCell","markingTask","markingStudents","Designations_View","green","red","yellow","gray","darkRed","Designations","Designations_Controller","description","rules","container","pStyle","textIndent","Info","App","changeUserPermission","checkedMentor","mentorName","condition","toLowerCase","checkMentorName","_this$state","allMentorsNames","components_Header","components_Select","components_Designations","Boolean","window","location","hostname","match","getMentorFromLocalstorage","getItem","parse","render","components_App","mentorStudent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4418ce9.chunk.js","sourcesContent":["export const selectContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  width: '40%',\r\n  minWidth: '150px',\r\n  height: '30px',\r\n  border: '2px solid black',\r\n  fontSize: 18,\r\n};\r\n\r\nexport const mentorP = {\r\n  width: '50%',\r\n  textAlign: 'center',\r\n  margin: 0,\r\n  paddingTop: 3,\r\n  borderRight: '1px solid black',\r\n  backgroundColor: 'white',\r\n};\r\n\r\nexport const select = {\r\n  width: '50%',\r\n  textAlign: 'center',\r\n  border: 'none',\r\n};\r\n\r\nexport const containerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-around',\r\n  minHeight: 350,\r\n  alignItems: 'flex-start',\r\n};\r\n","import React from 'react';\r\nimport { arrayOf, node, func } from 'prop-types';\r\nimport { selectContainer, mentorP, select } from '../../styles/select';\r\n\r\nfunction View(props) {\r\n  const { onChange, optionElements } = props;\r\n\r\n  return (\r\n    <div style={selectContainer}>\r\n      <p style={mentorP}>Mentor</p>\r\n      <select id=\"great-names\" onChange={onChange} style={select}>\r\n        <option>\r\n            Choose mentor\r\n        </option>\r\n        {optionElements}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nView.propTypes = {\r\n  optionElements: arrayOf(node).isRequired,\r\n  onChange: func.isRequired,\r\n};\r\n\r\nexport default View;\r\n","/*\r\n  *This function is an argument for array.sort.\r\n   It sets how to sort collection: by alphabet if it contains 'string'\r\n   or from less to more if it constains 'number'\r\n*/\r\nconst compare = (a, b) => {\r\n  if (a < b) {\r\n    return -1;\r\n  } if (a > b) return 1;\r\n  return 0;\r\n};\r\n\r\nexport default compare;\r\n","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { arrayOf, string, func } from 'prop-types';\r\nimport View from './View';\r\nimport compare from '../../Utils/compare';\r\n\r\n/*\r\n  *This function creates option elements from elements of collection\r\n    and selects one(this one is pointed as second argument).\r\n*/\r\nconst getOptions = (collection, selectedElement) => {\r\n  const arrayFromCollection = collection // Copy array from arguments and sort\r\n    .slice()\r\n    .sort(compare);\r\n\r\n  // Create element option from collection\r\n  const options = arrayFromCollection.map((element, index) => {\r\n    const id = index + 1;\r\n    if (element === selectedElement) {\r\n      return <option value={element} key={`option_${id}`} selected>{element}</option>;\r\n    }\r\n    return <option value={element} key={`option_${id}`}>{element}</option>;\r\n  });\r\n  return options;\r\n};\r\n/*\r\n  *This function contains logic of Select component\r\n*/\r\nfunction Controller(props) {\r\n  // This function takes selected option and changes state of main component\r\n  const handleChange = (e) => {\r\n    const github = e.target.value;\r\n    localStorage.setItem('mentor-dashboard', JSON.stringify({ mentorGithub: github }));\r\n    const { onChange } = props;\r\n    onChange(github);\r\n  };\r\n\r\n  const { collection, selected } = props;\r\n  const options = getOptions(collection, selected);\r\n\r\n  return (\r\n    <View onChange={handleChange} optionElements={options} />\r\n  );\r\n}\r\n\r\nController.propTypes = {\r\n  collection: arrayOf(string).isRequired,\r\n  selected: string.isRequired,\r\n  onChange: func.isRequired,\r\n};\r\n\r\nexport default Controller;\r\n","/*\r\n*Styles for table\r\n*/\r\nexport const table = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  minWidth: 320,\r\n  border: '2px solid black',\r\n  width: 'fit-content',\r\n  backgroundColor: 'white',\r\n  marginBottom: '20px',\r\n};\r\n\r\n/*\r\n*Styles for table header\r\n*/\r\nexport const tableHeader = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  minHeight: 30,\r\n  borderBottom: '2px solid black',\r\n};\r\n\r\nexport const headerTaskColumn = {\r\n  minWidth: 220,\r\n  widht: '44%',\r\n  textAlign: 'center',\r\n  borderRight: '2px solid black',\r\n};\r\n\r\nexport const headerStudentsColumn = {\r\n  minWidth: 100,\r\n  width: '66%',\r\n  textAlign: 'center',\r\n};\r\n/*\r\n*Styles for table body\r\n*/\r\nexport const tableBody = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n};\r\n\r\nexport const tasksColumn = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  minWidth: 220,\r\n  borderRight: '2px solid black',\r\n};\r\n\r\nexport const taskRow = {\r\n  borderTop: '1px solid black',\r\n};\r\n\r\nexport const studentsColumn = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  minWidth: 100,\r\n};\r\n\r\nexport const studentColumn = {\r\n  textAlign: 'center',\r\n  borderTop: '1px solid black',\r\n  borderLeft: '1px solid black',\r\n};\r\n\r\nexport const studentsStudent = {\r\n  minWidth: 100,\r\n  height: 'inherit',\r\n  textAlign: 'center',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: 5,\r\n  borderLeft: '1px solid black',\r\n};\r\n\r\nexport const emptyCell = {\r\n  color: 'white',\r\n};\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {\r\n  objectOf, any, arrayOf, object,\r\n} from 'prop-types';\r\nimport {\r\n  table, tableHeader, headerTaskColumn, headerStudentsColumn, tableBody, tasksColumn, studentsColumn,\r\n} from '../../styles/table';\r\n\r\nfunction View(props) {\r\n  const { rowsOfTasks, rowsOfStudentTasks } = props;\r\n\r\n  return (\r\n    <div className=\"table\" style={table}>\r\n\r\n      <div className=\"table__header\" style={tableHeader}>\r\n        <div className=\"header__task-column\" style={headerTaskColumn}>\r\n          <h3>Tasks</h3>\r\n        </div>\r\n        <div className=\"header__students-column\" style={headerStudentsColumn}>\r\n          <h3>Students</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table__body\" style={tableBody}>\r\n        <div className=\"tasksColumn\" style={tasksColumn}>\r\n          {rowsOfTasks}\r\n        </div>\r\n        <div className=\"students-rows\" style={studentsColumn}>\r\n          {rowsOfStudentTasks}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nView.propTypes = {\r\n  rowsOfTasks: objectOf(any).isRequired,\r\n  rowsOfStudentTasks: arrayOf(object).isRequired,\r\n};\r\n\r\nexport default View;\r\n","/*\r\n    *This function check status of task\r\n     and return background of task cell\r\n  */\r\nconst getTaskColorStatus = (taskStatus) => {\r\n  const tasksStyle = {};\r\n\r\n  switch (taskStatus) {\r\n    case 'Checking':\r\n      tasksStyle.backgroundColor = 'red';\r\n      break;\r\n    case 'ToDo':\r\n      tasksStyle.backgroundColor = 'gray';\r\n      break;\r\n    case 'In Progress':\r\n      tasksStyle.backgroundColor = 'yellow';\r\n      break;\r\n    case 'Checked':\r\n      tasksStyle.backgroundColor = 'green';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return tasksStyle;\r\n};\r\n\r\nexport default getTaskColorStatus;\r\n","import React from 'react';\r\nimport getTaskColorStatus from './getTaskColorStatus';\r\nimport { taskRow, emptyCell } from '../../../styles/table';\r\n\r\n/*\r\n*This function create task's elements.\r\n*/\r\nconst getRowsOfTasks = (objectOfTasks) => {\r\n  const { listOfTasks } = objectOfTasks;\r\n\r\n  const tasksRows = listOfTasks.map((titleOfTask, taskIndex) => {\r\n    const taskObject = objectOfTasks[titleOfTask];\r\n    const { title, link, status } = taskObject;\r\n    const taskId = 1 + taskIndex;\r\n    // set color of cell with task\r\n    const colorStatus = getTaskColorStatus(status);\r\n    // create row of task\r\n    return (\r\n      <div className=\"row__task\" key={`task_${taskId}`} style={taskRow}>\r\n        <div className=\"task__cell\" style={colorStatus}>\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {title}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"task-container\" style={tasksRows}>\r\n      <div className=\"empty-cell\" style={emptyCell}>55555</div>\r\n      {tasksRows}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default getRowsOfTasks;\r\n","/*\r\n  *This function check status of student task\r\n   and return background of task cell\r\n*/\r\nconst getStudTaskColorStatus = (studentTaskStatus, mark) => {\r\n  const tasksStyle = {};\r\n\r\n  if ((studentTaskStatus === 'Checked' || 'Checking') && mark > 0) {\r\n    tasksStyle.background = 'green';\r\n  }\r\n\r\n  if (studentTaskStatus === 'Checking' && mark === 0) {\r\n    tasksStyle.background = 'red';\r\n  }\r\n\r\n  if (studentTaskStatus === 'Checked' && mark === 0) {\r\n    tasksStyle.backgroundColor = 'darkred';\r\n  }\r\n\r\n  switch (studentTaskStatus) {\r\n    case 'checking':\r\n      tasksStyle.backgroundColor = 'red';\r\n      break;\r\n    case 'In Progress':\r\n      tasksStyle.backgroundColor = 'yellow';\r\n      break;\r\n    case 'ToDo':\r\n      tasksStyle.backgroundColor = 'lightgray';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return tasksStyle;\r\n};\r\n\r\nexport default getStudTaskColorStatus;\r\n","import React from 'react';\r\nimport getStudTaskColorStatus from './getStudTaskColorStatus';\r\nimport { studentColumn } from '../../../styles/table';\r\n\r\n/*\r\n*This function creates rows with students\r\n*/\r\nconst getRowsOfStudentsTasks = (objectOfMentor, objectOfTasks) => {\r\n  const { listOfTasks } = objectOfTasks;\r\n  const { listOfStudents, students } = objectOfMentor;\r\n  // Iterate for array of students\r\n  const studentsRows = listOfStudents.map((nameOfStudent, index) => {\r\n    const student = students[nameOfStudent];\r\n    const { github, githubLink, tasks } = student;\r\n    const studentId = 1 + index;\r\n    // iterate for array of tasks\r\n    const studentTasks = listOfTasks.map((tasksTitle, index1) => {\r\n      const currentTask = tasks[tasksTitle];\r\n      const { status, mark, pullRequest } = currentTask;\r\n      const taskNumber = 1 + index1;\r\n      // get color market of tasks\r\n      const colorStatus = getStudTaskColorStatus(status, mark);\r\n      // create marked task of student\r\n      return (\r\n        <div className=\"student-column\" key={`${github}-task_${taskNumber}`} style={studentColumn}>\r\n          <div style={colorStatus}>\r\n            <a href={pullRequest} target=\"_blank\" rel=\"noopener noreferrer\">{mark}</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    // create student container with completed or uncompleted tasks\r\n    return (\r\n      <div key={`student_${studentId}`}>\r\n        <div style={{ borderRight: '1px solid black', minWidth: 100, textAlign: 'center' }}>\r\n          <a href={githubLink}>{github}</a>\r\n        </div>\r\n        {studentTasks}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return studentsRows;\r\n};\r\n\r\nexport default getRowsOfStudentsTasks;\r\n","import React from 'react';\r\nimport { instanceOf } from 'prop-types';\r\nimport View from './View';\r\nimport getRowsOfTasks from './utils/getRowsOfTasks';\r\nimport getRowsOfStudentsTasks from './utils/getRowsOfStudentsTasks';\r\n\r\nfunction Controller(props) {\r\n  const { tasks, mentorObject } = props;\r\n\r\n  const rowsOfTasks = getRowsOfTasks(tasks);\r\n  const rowsOfStudentTasks = getRowsOfStudentsTasks(mentorObject, tasks);\r\n\r\n  return (\r\n    <View rowsOfTasks={rowsOfTasks} rowsOfStudentTasks={rowsOfStudentTasks} />\r\n  );\r\n}\r\n\r\nController.propTypes = {\r\n  tasks: instanceOf(Object).isRequired,\r\n  mentorObject: instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Controller;\r\n","import React from 'react';\r\nimport { instanceOf } from 'prop-types';\r\nimport Controller from './Controller';\r\n\r\n// this component renders the table with students and mentor tasks\r\nfunction Table(props) {\r\n  const { tasks, mentorObject } = props;\r\n  return (\r\n    <Controller tasks={tasks} mentorObject={mentorObject} />\r\n  );\r\n}\r\n\r\nTable.propTypes = {\r\n  tasks: instanceOf(Object).isRequired,\r\n  mentorObject: instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { arrayOf, string, instanceOf } from 'prop-types';\r\nimport Controller from './Controller';\r\nimport Table from '../Table';\r\nimport { containerStyle } from '../../styles/select';\r\n\r\n// This function implements select tag with list of mentors\r\nclass Select extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: props.name };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(newName) {\r\n    this.setState({ name: newName });\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n    const { data, tasks, mentors } = this.props;\r\n    const mentor = mentors[name];\r\n\r\n    return (\r\n      <div style={containerStyle}>\r\n        <Controller onChange={this.handleChange} selected={name} collection={data} />\r\n        <Table tasks={tasks} mentorObject={mentor} selectedMentor={name} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  data: arrayOf(string).isRequired,\r\n  name: string.isRequired,\r\n  tasks: instanceOf(Object).isRequired,\r\n  mentors: instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Select;\r\n","export const containerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  minWidth: 200,\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  backgroundColor: 'cadetblue',\r\n  minHeight: '100px',\r\n};\r\n\r\nexport const headerButton = {\r\n  fontSize: 20,\r\n  maxWidth: 100,\r\n  minheight: 30,\r\n};\r\n\r\nexport const headerP = {\r\n  fontSize: 20,\r\n  minWidth: 150,\r\n  minHeight: 30,\r\n  textAlign: 'center',\r\n};\r\n","export const buttonStyle = {\r\n  border: '1px solid black',\r\n  fontSize: 20,\r\n  width: 100,\r\n  height: 24,\r\n  textAlign: 'center',\r\n};\r\n\r\nexport const containerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  minHeight: 100,\r\n  alignItems: 'center',\r\n  justifyContent: 'space-evenly',\r\n  marginRight: 10,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { headerButton, headerP } from '../../styles/header';\r\nimport { containerStyle } from '../../styles/login';\r\n\r\n/*\r\n*This component render login menu. It takes three parametres.\r\n  If a user enter wrong login he gives a message.\r\n*/\r\nfunction Login(props) {\r\n  const { onClickLogin, change, message } = props;\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      { /* This message appears when user enters wrong login */ }\r\n      {message === 'error' && <p style={{ color: 'red' }}>Wrong login!</p>}\r\n      <p style={headerP}>Enter github account</p>\r\n      <input type=\"text\" onChange={change} style={{ minHeight: 20 }} />\r\n      <button type=\"submit\" onClick={onClickLogin} style={headerButton}>Login</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  onClickLogin: PropTypes.func.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default Login;\r\n","const containerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-evenly',\r\n  alignItems: 'center',\r\n  marginRight: 10,\r\n  minHeight: 'inherit',\r\n};\r\n\r\nexport default containerStyle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { headerButton, headerP } from '../../styles/header';\r\nimport containerStyle from '../../styles/logout';\r\n\r\nfunction Logout(props) {\r\n  const { onClickLogout, userName } = props;\r\n  return (\r\n    <div style={containerStyle}>\r\n      <p style={headerP}>{userName}</p>\r\n      <button type=\"submit\" onClick={onClickLogout} style={headerButton}>Logout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogout.propTypes = {\r\n  onClickLogout: PropTypes.func.isRequired,\r\n  userName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { containerStyle } from '../../styles/header';\r\nimport Login from '../Log-in';\r\nimport Logout from '../Log-out';\r\n\r\nfunction View(props) {\r\n  const {\r\n    data, onClickLogin, onClickLogout, handleChange,\r\n  } = props;\r\n  // const { authStatus, userName } = data;\r\n  const { userName, userStatus, message } = data;\r\n\r\n  return (\r\n    <div className=\"header\" style={containerStyle}>\r\n      <h2 style={{ marginLeft: 10 }}>Mentor dashboard</h2>\r\n      {userStatus === 'unauthorised'\r\n        ? <Login onClickLogin={onClickLogin} change={handleChange} message={message} />\r\n        : <Logout onClickLogout={onClickLogout} userName={userName} />\r\n          }\r\n    </div>\r\n  );\r\n}\r\n\r\nView.propTypes = {\r\n  onClickLogout: PropTypes.func.isRequired,\r\n  onClickLogin: PropTypes.func.isRequired,\r\n  data: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default View;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport View from './View';\r\n\r\n// This component renders header of the application\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { userName: null };\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const inputText = event.target.value;\r\n    this.setState({ userName: inputText });\r\n  }\r\n\r\n  // handle click of login button in 'login' component\r\n  login() {\r\n    const { changePermission } = this.props;\r\n    const { userName } = this.state;\r\n    changePermission(userName);\r\n    this.setState({ userName: '' });\r\n  }\r\n\r\n  // handle click of logout button in 'logout' component\r\n  logout() {\r\n    const { changePermission } = this.props;\r\n    changePermission('logout');\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    const { userStatus, userName, message } = data;\r\n    const info = { userStatus, message };\r\n\r\n    if (userStatus === 'authorised') {\r\n      info.userName = userName;\r\n    }\r\n\r\n    return (\r\n      <View data={info} onClickLogin={this.login} onClickLogout={this.logout} handleChange={this.handleChange} />\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  changePermission: PropTypes.func.isRequired,\r\n  data: PropTypes.objectOf(PropTypes.string).isRequired,\r\n};\r\n\r\n\r\nexport default Header;\r\n","export const appStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  minHeight: 450,\r\n  backgroundColor: 'lightsteelblue',\r\n};\r\n\r\nexport const tableWraper = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  minHeight: 600,\r\n};\r\n","export const designationContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  minWidth: 500,\r\n  width: '40%',\r\n  border: '1px solid black',\r\n};\r\n\r\nexport const desinationTitle = {\r\n  textAlign: 'center',\r\n};\r\n\r\nexport const listContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-evenly',\r\n};\r\n\r\nexport const listTitle = {\r\n  margin: 5,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  designationContainer, desinationTitle, listContainer, listTitle,\r\n} from '../../styles/designations';\r\n\r\nfunction View(props) {\r\n  const { tasksMarkers, studentMarkers } = props;\r\n\r\n  return (\r\n    <div style={designationContainer}>\r\n      <h2 style={desinationTitle}>Designations</h2>\r\n      <div style={listContainer}>\r\n        <div>\r\n          <h3 style={listTitle}>Tasks status</h3>\r\n          {tasksMarkers}\r\n        </div>\r\n        <div>\r\n          <h3 style={listTitle}>Task perfoming by students</h3>\r\n          {studentMarkers}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nView.propTypes = {\r\n  tasksMarkers: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n  studentMarkers: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n};\r\n\r\n\r\nexport default View;\r\n","import React from 'react';\r\n\r\n/*\r\n  *This function takes collection where \"key\" it is a color name\r\n    and \"value\" it is text for the color and creates array of nodes(color - text).\r\n*/\r\n\r\nconst colorContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  marginBottom: 10,\r\n};\r\n\r\nfunction getListMarkedWithColor(collection) {\r\n  // Take keys from collection\r\n  const arrayOfKeys = Object.keys(collection);\r\n\r\n  // Create list of 'color - value'\r\n  const markedList = arrayOfKeys.map((color, index) => {\r\n    const id = 1 + index;\r\n\r\n    const coloredCell = {\r\n      width: 20,\r\n      height: 20,\r\n      backgroundColor: color,\r\n    };\r\n\r\n    return (\r\n      <div style={colorContainer} key={id}>\r\n        <div style={coloredCell} />\r\n        <p>{` - ${collection[color]}`}</p>\r\n      </div>\r\n    );\r\n  });\r\n  return markedList;\r\n}\r\n\r\nexport default getListMarkedWithColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport View from './View';\r\nimport getListMarkedWithColor from './utils/getListMarkedWithColor';\r\n\r\nfunction Controller(props) {\r\n  const { markingTask, markingStudents } = props;\r\n\r\n  // Create arrays with node elements\r\n  const tasksMarkers = getListMarkedWithColor(markingTask);\r\n  const studentMarkers = getListMarkedWithColor(markingStudents);\r\n\r\n  return (\r\n    <View tasksMarkers={tasksMarkers} studentMarkers={studentMarkers} />\r\n  );\r\n}\r\n\r\nController.propTypes = {\r\n  markingStudents: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  markingTask: PropTypes.objectOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Controller;\r\n","export const markingTask = {\r\n  green: 'The task was checked',\r\n  red: 'The task needs to be checked.',\r\n  yellow: 'The task is making by students',\r\n  gray: 'The task has not been set yet',\r\n};\r\n\r\nexport const markingStudents = {\r\n  darkRed: 'The task was not passed',\r\n  red: 'Task is checking',\r\n  green: 'The task was passed',\r\n  gray: 'The task has not been set yet',\r\n  yellow: 'The task is doing',\r\n};\r\n","import React from 'react';\r\nimport Controller from './Controller';\r\nimport { markingTask, markingStudents } from './data/data';\r\n\r\n/*\r\n  *This function renders designations for the table mentor's table.\r\n  It takes two object as parametres object of task marking and object of students task score\r\n*/\r\nfunction Designations() {\r\n  return (\r\n    <Controller markingTask={markingTask} markingStudents={markingStudents} />\r\n  );\r\n}\r\n\r\nexport default Designations;\r\n","export const description = 'This application renders a mentor dashboard. It shows an information about tasks which have to be examined by mentors of \"Rolling scopes\" school and score of their students.';\r\nexport const rules = 'If you are a mentor of Rolling scopes school you have to login in the right left corner with your \"github\" login. If you are not a mentor you can use login \"maximuk\".';\r\n","import React from 'react';\r\nimport { description, rules } from './data/data';\r\n\r\nconst container = {\r\n  maxWidth: 600,\r\n  height: 300,\r\n};\r\n\r\nconst pStyle = {\r\n  fontSize: 20,\r\n  textIndent: 20,\r\n};\r\n\r\n// This function renders info about the application\r\nexport default function Info() {\r\n  return (\r\n    <div style={container}>\r\n      <p style={pStyle}>{description}</p>\r\n      <p style={pStyle}>{rules}</p>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport { instanceOf, string } from 'prop-types';\r\nimport Select from '../Select';\r\nimport Header1 from '../Header/index';\r\nimport { tableWraper, appStyle } from '../../styles/app';\r\nimport Designations from '../Designations';\r\nimport Info from '../Info';\r\nimport checkMentorName from './utils/checkMentorName';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { userStatus: 'unauthorised', userName: null, message: 'good' };\r\n    this.changeUserPermission = this.changeUserPermission.bind(this);\r\n  }\r\n\r\n  /*\r\n    *This function examines if user is a mentor of Rolling scopes school.\r\n    Depend on mentor's checking  we set a permission of watching some part of application for user.\r\n  */\r\n  changeUserPermission(inputText) {\r\n    const { data } = this.props;\r\n    const { mentor } = data;\r\n\r\n    const checkedMentor = checkMentorName(inputText, mentor);\r\n    const { condition, mentorName } = checkedMentor;\r\n\r\n    if (condition) {\r\n      this.setState({ userStatus: 'authorised', userName: mentorName, message: 'good' });\r\n    } if (!condition && (mentorName !== 'logout' || '')) {\r\n      this.setState({ userStatus: 'unauthorised', message: 'error' });\r\n    } else if (!condition) this.setState({ userStatus: 'unauthorised' });\r\n  }\r\n\r\n  render() {\r\n    const { userStatus, userName, message } = this.state;\r\n    const { data } = this.props;\r\n    let { name } = this.props;\r\n    const { allMentorsNames, mentor, tasks } = data;\r\n    // if name does not in localstorage yet\r\n    if (name === '') {\r\n      name = 'a-yatskevich';\r\n    }\r\n\r\n    return (\r\n      <div className=\"one\" style={appStyle}>\r\n        <Header1 changePermission={this.changeUserPermission} data={{ userStatus, userName, message }} />\r\n        {userStatus === 'unauthorised'\r\n          ? <Info />\r\n          : (\r\n            <div style={tableWraper}>\r\n              <Select data={allMentorsNames} name={name} tasks={tasks} mentors={mentor} />\r\n              <Designations />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  data: instanceOf(Object).isRequired,\r\n  name: string.isRequired,\r\n};\r\n\r\nexport default App;\r\n","/*\r\n*This function checks is mentor in mentor's collection.\r\n*/\r\nexport default function checkMentor(inputText, collection) {\r\n  let condition;\r\n  let mentorName;\r\n\r\n  if (inputText === null) {\r\n    condition = false;\r\n    mentorName = '';\r\n  }\r\n  mentorName = inputText.toLowerCase();\r\n  condition = collection[mentorName];\r\n\r\n  return { condition, mentorName };\r\n}\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-undef */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable no-undef */\r\nfunction getMentorFromLocalstorage() {\r\n  let value = localStorage.getItem('mentor-dashboard');\r\n  if (value) {\r\n    value = JSON.parse(value);\r\n    return value.mentorGithub;\r\n  }\r\n  return '';\r\n}\r\n\r\nexport default getMentorFromLocalstorage;\r\n","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './components/App';\r\nimport { unregister } from './serviceWorker';\r\nimport mentorStudent from './mentor-student.json';\r\nimport getMentorFromLocalstorage from './Utils/getMentorFromLocalstorage';\r\n\r\nconst mentorGithub = getMentorFromLocalstorage();\r\n\r\nrender(<App name={mentorGithub} data={mentorStudent} />, document.getElementById('root'));\r\n\r\nunregister();\r\n"],"sourceRoot":""}