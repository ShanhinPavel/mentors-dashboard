{"version":3,"sources":["styles/select.js","components/Select/View.js","Utils/compare.js","components/Select/Controller.js","styles/table.js","components/Table/View.js","components/Table/utils/getTaskColorStatus.js","components/Table/utils/getRowsOfTasks.js","components/Table/utils/getStudTaskColorStatus.js","components/Table/utils/getRowsOfStudentsTasks.js","components/Table/Controller.js","components/Table/index.js","components/Select/index.js","styles/header.js","styles/login.js","components/Log-in/index.js","styles/logout.js","components/Log-out/index.js","components/Header/View.js","components/Header/index.js","styles/app.js","styles/designations.js","components/Designations/View.js","components/Designations/utils/getListMarkedWithColor.js","components/Designations/Controller.js","components/Designations/data/data.js","components/Designations/index.js","components/Info/data/data.js","components/Info/index.js","components/App/index.js","components/App/utils/checkMentorName.js","serviceWorker.js","Utils/getMentorFromLocalstorage.js","index.js"],"names":["selectContainer","display","flexDirection","width","minWidth","height","border","fontSize","mentorP","textAlign","margin","paddingTop","borderRight","backgroundColor","select","containerStyle","justifyContent","minHeight","alignItems","View","props","onChange","optionElements","react_default","a","createElement","style","id","compare","b","getOptions","collection","selectedElement","slice","sort","map","element","index","value","key","concat","selected","Controller","options","Select_View","e","github","target","localStorage","setItem","JSON","stringify","mentorGithub","table","marginBottom","tableHeader","borderBottom","headerTaskColumn","widht","headerStudentsColumn","tableBody","tasksColumn","taskRow","borderTop","studentsColumn","studentColumn","borderLeft","emptyCell","color","rowsOfTasks","rowsOfStudentTasks","className","getTaskColorStatus","taskStatus","tasksStyle","getRowsOfTasks","objectOfTasks","tasksRows","listOfTasks","titleOfTask","taskIndex","taskObject","title","link","status","taskId","colorStatus","href","rel","getStudTaskColorStatus","studentTaskStatus","mark","background","getRowsOfStudentsTasks","objectOfMentor","listOfStudents","students","nameOfStudent","student","githubLink","tasks","studentTasks","tasksTitle","currentTask","pullRequest","taskNumber","mentorObject","Table_View","Table","Table_Controller","Select","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","handleChange","bind","assertThisInitialized","newName","setState","_this$props","data","mentor","mentors","Select_Controller","components_Table","selectedMentor","React","Component","headerButton","maxWidth","minheight","headerP","marginRight","Login","onClickLogin","change","message","type","onClick","Logout","onClickLogout","userName","userStatus","marginLeft","Log_in","Log_out","Header","login","logout","event","inputText","changePermission","info","Header_View","appStyle","tableWraper","designationContainer","desinationTitle","listContainer","listTitle","tasksMarkers","studentMarkers","colorContainer","getListMarkedWithColor","keys","coloredCell","markingTask","markingStudents","Designations_View","green","red","yellow","gray","darkRed","Designations","Designations_Controller","description","rules","container","pStyle","textIndent","Info","App","changeUserPermission","checkedMentor","mentorName","condition","toLowerCase","checkMentorName","_this$state","allMentorsNames","components_Header","components_Select","components_Designations","Boolean","window","location","hostname","match","getMentorFromLocalstorage","getItem","parse","render","components_App","mentorStudent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7221d6b4.chunk.js","sourcesContent":["export const selectContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  width: '40%',\n  minWidth: '150px',\n  height: '30px',\n  border: '2px solid black',\n  fontSize: 18,\n};\n\nexport const mentorP = {\n  width: '50%',\n  textAlign: 'center',\n  margin: 0,\n  paddingTop: 3,\n  borderRight: '1px solid black',\n  backgroundColor: 'white',\n};\n\nexport const select = {\n  width: '50%',\n  textAlign: 'center',\n  border: 'none',\n};\n\nexport const containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-around',\n  minHeight: 350,\n  alignItems: 'flex-start',\n};\n","import React from 'react';\nimport { arrayOf, node, func } from 'prop-types';\nimport { selectContainer, mentorP, select } from '../../styles/select';\n\nfunction View(props) {\n  const { onChange, optionElements } = props;\n\n  return (\n    <div style={selectContainer}>\n      <p style={mentorP}>Mentor</p>\n      <select id=\"great-names\" onChange={onChange} style={select}>\n        <option>\n            Choose mentor\n        </option>\n        {optionElements}\n      </select>\n    </div>\n  );\n}\n\nView.propTypes = {\n  optionElements: arrayOf(node).isRequired,\n  onChange: func.isRequired,\n};\n\nexport default View;\n","/*\n  *This function is an argument for array.sort.\n   It sets how to sort collection: by alphabet if it contains 'string'\n   or from less to more if it constains 'number'\n*/\nconst compare = (a, b) => {\n  if (a < b) {\n    return -1;\n  } if (a > b) return 1;\n  return 0;\n};\n\nexport default compare;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport { arrayOf, string, func } from 'prop-types';\nimport View from './View';\nimport compare from '../../Utils/compare';\n\n/*\n  *This function creates option elements from elements of collection\n    and selects one(this one is pointed as second argument).\n*/\nconst getOptions = (collection, selectedElement) => {\n  const arrayFromCollection = collection // Copy array from arguments and sort\n    .slice()\n    .sort(compare);\n\n  // Create element option from collection\n  const options = arrayFromCollection.map((element, index) => {\n    const id = index + 1;\n    if (element === selectedElement) {\n      return <option value={element} key={`option_${id}`} selected>{element}</option>;\n    }\n    return <option value={element} key={`option_${id}`}>{element}</option>;\n  });\n  return options;\n};\n/*\n  *This function contains logic of Select component\n*/\nfunction Controller(props) {\n  // This function takes selected option and changes state of main component\n  const handleChange = (e) => {\n    const github = e.target.value;\n    localStorage.setItem('mentor-dashboard', JSON.stringify({ mentorGithub: github }));\n    const { onChange } = props;\n    onChange(github);\n  };\n\n  const { collection, selected } = props;\n  const options = getOptions(collection, selected);\n\n  return (\n    <View onChange={handleChange} optionElements={options} />\n  );\n}\n\nController.propTypes = {\n  collection: arrayOf(string).isRequired,\n  selected: string.isRequired,\n  onChange: func.isRequired,\n};\n\nexport default Controller;\n","/*\n*Styles for table\n*/\nexport const table = {\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: 320,\n  border: '2px solid black',\n  width: 'fit-content',\n  backgroundColor: 'white',\n  marginBottom: '20px',\n};\n\n/*\n*Styles for table header\n*/\nexport const tableHeader = {\n  display: 'flex',\n  flexDirection: 'row',\n  minHeight: 30,\n  borderBottom: '2px solid black',\n};\n\nexport const headerTaskColumn = {\n  minWidth: 220,\n  widht: '44%',\n  textAlign: 'center',\n  borderRight: '2px solid black',\n};\n\nexport const headerStudentsColumn = {\n  minWidth: 100,\n  width: '66%',\n  textAlign: 'center',\n};\n/*\n*Styles for table body\n*/\nexport const tableBody = {\n  display: 'flex',\n  flexDirection: 'row',\n};\n\nexport const tasksColumn = {\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: 220,\n  borderRight: '2px solid black',\n};\n\nexport const taskRow = {\n  borderTop: '1px solid black',\n};\n\nexport const studentsColumn = {\n  display: 'flex',\n  flexDirection: 'row',\n  minWidth: 100,\n};\n\nexport const studentColumn = {\n  textAlign: 'center',\n  borderTop: '1px solid black',\n  borderLeft: '1px solid black',\n};\n\nexport const studentsStudent = {\n  minWidth: 100,\n  height: 'inherit',\n  textAlign: 'center',\n  display: 'flex',\n  alignItems: 'center',\n  padding: 5,\n  borderLeft: '1px solid black',\n};\n\nexport const emptyCell = {\n  color: 'white',\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport {\n  objectOf, any, arrayOf, object,\n} from 'prop-types';\nimport {\n  table, tableHeader, headerTaskColumn, headerStudentsColumn, tableBody, tasksColumn, studentsColumn,\n} from '../../styles/table';\n\nfunction View(props) {\n  const { rowsOfTasks, rowsOfStudentTasks } = props;\n\n  return (\n    <div className=\"table\" style={table}>\n\n      <div className=\"table__header\" style={tableHeader}>\n        <div className=\"header__task-column\" style={headerTaskColumn}>\n          <h3>Tasks</h3>\n        </div>\n        <div className=\"header__students-column\" style={headerStudentsColumn}>\n          <h3>Students</h3>\n        </div>\n      </div>\n\n      <div className=\"table__body\" style={tableBody}>\n        <div className=\"tasksColumn\" style={tasksColumn}>\n          {rowsOfTasks}\n        </div>\n        <div className=\"students-rows\" style={studentsColumn}>\n          {rowsOfStudentTasks}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nView.propTypes = {\n  rowsOfTasks: objectOf(any).isRequired,\n  rowsOfStudentTasks: arrayOf(object).isRequired,\n};\n\nexport default View;\n","/*\n    *This function check status of task\n     and return background of task cell\n  */\nconst getTaskColorStatus = (taskStatus) => {\n  const tasksStyle = {};\n\n  switch (taskStatus) {\n    case 'Checking':\n      tasksStyle.backgroundColor = 'red';\n      break;\n    case 'ToDo':\n      tasksStyle.backgroundColor = 'gray';\n      break;\n    case 'In Progress':\n      tasksStyle.backgroundColor = 'yellow';\n      break;\n    case 'Checked':\n      tasksStyle.backgroundColor = 'green';\n      break;\n    default:\n      break;\n  }\n\n  return tasksStyle;\n};\n\nexport default getTaskColorStatus;\n","import React from 'react';\nimport getTaskColorStatus from './getTaskColorStatus';\nimport { taskRow, emptyCell } from '../../../styles/table';\n\n/*\n*This function create task's elements.\n*/\nconst getRowsOfTasks = (objectOfTasks) => {\n  const { listOfTasks } = objectOfTasks;\n\n  const tasksRows = listOfTasks.map((titleOfTask, taskIndex) => {\n    const taskObject = objectOfTasks[titleOfTask];\n    const { title, link, status } = taskObject;\n    const taskId = 1 + taskIndex;\n\n    const colorStatus = getTaskColorStatus(status);\n\n    return (\n      <div className=\"row__task\" key={`task_${taskId}`} style={taskRow}>\n        <div className=\"task__cell\" style={colorStatus}>\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {title}\n          </a>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"task-container\" style={tasksRows}>\n      <div className=\"empty-cell\" style={emptyCell}>55555</div>\n      {tasksRows}\n    </div>\n  );\n};\n\nexport default getRowsOfTasks;\n","/*\n  *This function check status of student task\n   and return background of task cell\n*/\nconst getStudTaskColorStatus = (studentTaskStatus, mark) => {\n  const tasksStyle = {};\n\n  if ((studentTaskStatus === 'Checked' || 'Checking') && mark > 0) {\n    tasksStyle.background = 'green';\n  }\n\n  if (studentTaskStatus === 'Checking' && mark === 0) {\n    tasksStyle.background = 'red';\n  }\n\n  if (studentTaskStatus === 'Checked' && mark === 0) {\n    tasksStyle.backgroundColor = 'darkred';\n  }\n\n  switch (studentTaskStatus) {\n    case 'checking':\n      tasksStyle.backgroundColor = 'red';\n      break;\n    case 'In Progress':\n      tasksStyle.backgroundColor = 'yellow';\n      break;\n    case 'ToDo':\n      tasksStyle.backgroundColor = 'lightgray';\n      break;\n    default:\n      break;\n  }\n  return tasksStyle;\n};\n\nexport default getStudTaskColorStatus;\n","import React from 'react';\nimport getStudTaskColorStatus from './getStudTaskColorStatus';\nimport { studentColumn } from '../../../styles/table';\n\n/*\n*This function creates rows with students\n*/\nconst getRowsOfStudentsTasks = (objectOfMentor, objectOfTasks) => {\n  const { listOfTasks } = objectOfTasks;\n  const { listOfStudents, students } = objectOfMentor;\n\n  const studentsRows = listOfStudents.map((nameOfStudent) => {\n    const student = students[nameOfStudent];\n    const { github, githubLink, tasks } = student;\n\n    const studentTasks = listOfTasks.map((tasksTitle, index) => {\n      const currentTask = tasks[tasksTitle];\n      const { status, mark, pullRequest } = currentTask;\n      const taskNumber = 1 + index;\n\n      const colorStatus = getStudTaskColorStatus(status, mark);\n\n      return (\n        <div className=\"student-column\" key={`${github}-task_${taskNumber}`} style={studentColumn}>\n          <div style={colorStatus}>\n            <a href={pullRequest} target=\"_blank\" rel=\"noopener noreferrer\">{mark}</a>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        <div style={{ borderRight: '1px solid black', minWidth: 100, textAlign: 'center' }}>\n          <a href={githubLink}>{github}</a>\n        </div>\n        {studentTasks}\n      </div>\n    );\n  });\n\n  return studentsRows;\n};\n\nexport default getRowsOfStudentsTasks;\n","import React from 'react';\nimport { instanceOf } from 'prop-types';\nimport View from './View';\nimport getRowsOfTasks from './utils/getRowsOfTasks';\nimport getRowsOfStudentsTasks from './utils/getRowsOfStudentsTasks';\n\nfunction Controller(props) {\n  const { tasks, mentorObject } = props;\n\n  const rowsOfTasks = getRowsOfTasks(tasks);\n  const rowsOfStudentTasks = getRowsOfStudentsTasks(mentorObject, tasks);\n\n  return (\n    <View rowsOfTasks={rowsOfTasks} rowsOfStudentTasks={rowsOfStudentTasks} />\n  );\n}\n\nController.propTypes = {\n  tasks: instanceOf(Object).isRequired,\n  mentorObject: instanceOf(Object).isRequired,\n};\n\nexport default Controller;\n","import React from 'react';\nimport { instanceOf } from 'prop-types';\nimport Controller from './Controller';\n\nfunction Table(props) {\n  const { tasks, mentorObject } = props;\n  return (\n    <Controller tasks={tasks} mentorObject={mentorObject} />\n  );\n}\n\nTable.propTypes = {\n  tasks: instanceOf(Object).isRequired,\n  mentorObject: instanceOf(Object).isRequired,\n};\n\nexport default Table;\n","import React from 'react';\nimport { arrayOf, string, instanceOf } from 'prop-types';\nimport Controller from './Controller';\nimport Table from '../Table';\nimport { containerStyle } from '../../styles/select';\n\nclass Select extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: props.name };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(newName) {\n    this.setState({ name: newName });\n  }\n\n  render() {\n    const { name } = this.state;\n    const { data, tasks, mentors } = this.props;\n    const mentor = mentors[name];\n\n    return (\n      <div style={containerStyle}>\n        <Controller onChange={this.handleChange} selected={name} collection={data} />\n        <Table tasks={tasks} mentorObject={mentor} selectedMentor={name} />\n      </div>\n    );\n  }\n}\n\nSelect.propTypes = {\n  data: arrayOf(string).isRequired,\n  name: string.isRequired,\n  tasks: instanceOf(Object).isRequired,\n  mentors: instanceOf(Object).isRequired,\n};\n\nexport default Select;\n","export const containerStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  minWidth: 200,\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  backgroundColor: 'cadetblue',\n  minHeight: '100px',\n};\n\nexport const headerButton = {\n  fontSize: 20,\n  maxWidth: 100,\n  minheight: 30,\n};\n\nexport const headerP = {\n  fontSize: 20,\n  minWidth: 150,\n  minHeight: 30,\n  textAlign: 'center',\n};\n","export const buttonStyle = {\n  border: '1px solid black',\n  fontSize: 20,\n  width: 100,\n  height: 24,\n  textAlign: 'center',\n};\n\nexport const containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  minHeight: 100,\n  alignItems: 'center',\n  justifyContent: 'space-evenly',\n  marginRight: 10,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { headerButton, headerP } from '../../styles/header';\nimport { containerStyle } from '../../styles/login';\n\n/*\n*This component render login menu. It takes three parametres.\n  If a user enter wrong login he gives a message.\n*/\nfunction Login(props) {\n  const { onClickLogin, change, message } = props;\n\n  return (\n    <div style={containerStyle}>\n      { /* This message appears when user enters wrong login */ }\n      {message === 'error' && <p style={{ color: 'red' }}>Wrong login!</p>}\n      <p style={headerP}>Enter github account</p>\n      <input type=\"text\" onChange={change} style={{ minHeight: 20 }} />\n      <button type=\"submit\" onClick={onClickLogin} style={headerButton}>Login</button>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  onClickLogin: PropTypes.func.isRequired,\n  change: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired,\n};\n\n\nexport default Login;\n","const containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  alignItems: 'center',\n  marginRight: 10,\n  minHeight: 'inherit',\n};\n\nexport default containerStyle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { headerButton, headerP } from '../../styles/header';\nimport containerStyle from '../../styles/logout';\n\nfunction Logout(props) {\n  const { onClickLogout, userName } = props;\n  return (\n    <div style={containerStyle}>\n      <p style={headerP}>{userName}</p>\n      <button type=\"submit\" onClick={onClickLogout} style={headerButton}>Logout</button>\n    </div>\n  );\n}\n\nLogout.propTypes = {\n  onClickLogout: PropTypes.func.isRequired,\n  userName: PropTypes.string.isRequired,\n};\n\nexport default Logout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { containerStyle } from '../../styles/header';\nimport Login from '../Log-in';\nimport Logout from '../Log-out';\n\nfunction View(props) {\n  const {\n    data, onClickLogin, onClickLogout, handleChange,\n  } = props;\n  // const { authStatus, userName } = data;\n  const { userName, userStatus, message } = data;\n\n  return (\n    <div className=\"header\" style={containerStyle}>\n      <h2 style={{ marginLeft: 10 }}>Mentor dashboard</h2>\n      {userStatus === 'unauthorised'\n        ? <Login onClickLogin={onClickLogin} change={handleChange} message={message} />\n        : <Logout onClickLogout={onClickLogout} userName={userName} />\n          }\n    </div>\n  );\n}\n\nView.propTypes = {\n  onClickLogout: PropTypes.func.isRequired,\n  onClickLogin: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\n\nexport default View;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from './View';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { userName: null };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const inputText = event.target.value;\n    this.setState({ userName: inputText });\n  }\n\n  login() {\n    const { changePermission } = this.props;\n    const { userName } = this.state;\n    changePermission(userName);\n    this.setState({ userName: '' });\n  }\n\n  logout() {\n    const { changePermission } = this.props;\n    changePermission('logout');\n  }\n\n  render() {\n    const { data } = this.props;\n    const { userStatus, userName, message } = data;\n    const info = { userStatus, message };\n\n    if (userStatus === 'authorised') {\n      info.userName = userName;\n    }\n\n    return (\n      <View data={info} onClickLogin={this.login} onClickLogout={this.logout} handleChange={this.handleChange} />\n    );\n  }\n}\n\nHeader.propTypes = {\n  changePermission: PropTypes.func.isRequired,\n  data: PropTypes.objectOf(PropTypes.string),\n};\n\n\nexport default Header;\n","export const appStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  minHeight: 450,\n  backgroundColor: 'lightsteelblue',\n};\n\nexport const tableWraper = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  minHeight: 600,\n};\n","export const designationContainer = {\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: 500,\n  width: '40%',\n  border: '1px solid black',\n};\n\nexport const desinationTitle = {\n  textAlign: 'center',\n};\n\nexport const listContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-evenly',\n};\n\nexport const listTitle = {\n  margin: 5,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  designationContainer, desinationTitle, listContainer, listTitle,\n} from '../../styles/designations';\n\nfunction View(props) {\n  const { tasksMarkers, studentMarkers } = props;\n\n  return (\n    <div style={designationContainer}>\n      <h2 style={desinationTitle}>Designations</h2>\n      <div style={listContainer}>\n        <div>\n          <h3 style={listTitle}>Tasks status</h3>\n          {tasksMarkers}\n        </div>\n        <div>\n          <h3 style={listTitle}>Task perfoming by students</h3>\n          {studentMarkers}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nView.propTypes = {\n  tasksMarkers: PropTypes.objectOf(PropTypes.node).isRequired,\n  studentMarkers: PropTypes.objectOf(PropTypes.node).isRequired,\n};\n\n\nexport default View;\n","import React from 'react';\n\n/*\n  *This function takes collection where \"key\" it is a color name\n    and \"value\" it is text for the color\n*/\n\nconst colorContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  marginBottom: 10,\n};\n\nfunction getListMarkedWithColor(collection) {\n  // Take keys from collection\n  const arrayOfKeys = Object.keys(collection);\n\n  // Create list of 'color - value'\n  const markedList = arrayOfKeys.map((color) => {\n    const coloredCell = {\n      width: 20,\n      height: 20,\n      backgroundColor: color,\n    };\n\n    return (\n      <div style={colorContainer}>\n        <div style={coloredCell} />\n        <p>{` - ${collection[color]}`}</p>\n      </div>\n    );\n  });\n  return markedList;\n}\n\nexport default getListMarkedWithColor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport View from './View';\nimport getListMarkedWithColor from './utils/getListMarkedWithColor';\n\nfunction Controller(props) {\n  const { markingTask, markingStudents } = props;\n\n  // Create arrays with node elements\n  const tasksMarkers = getListMarkedWithColor(markingTask);\n  const studentMarkers = getListMarkedWithColor(markingStudents);\n\n  return (\n    <View tasksMarkers={tasksMarkers} studentMarkers={studentMarkers} />\n  );\n}\n\nController.propTypes = {\n  markingStudents: PropTypes.object.isRequired,\n  markingTask: PropTypes.object.isRequired,\n};\n\nexport default Controller;\n","export const markingTask = {\n  green: 'The task was checked',\n  red: 'The task needs to be checked.',\n  yellow: 'The task is making by students',\n  gray: 'The task has not been set yet',\n};\n\nexport const markingStudents = {\n  darkRed: 'The task was not passed',\n  red: 'Task is checking',\n  green: 'The task was passed',\n  gray: 'The task has not been set yet',\n  yellow: 'The task is doing',\n};\n","import React from 'react';\nimport Controller from './Controller';\nimport { markingTask, markingStudents } from './data/data';\n\nfunction Designations() {\n  return (\n    <Controller markingTask={markingTask} markingStudents={markingStudents} />\n  );\n}\n\nexport default Designations;\n","export const description = 'This application renders a mentor dashboard. It shows an information about tasks which have to be examined by mentors of \"Rolling scopes\" school and score of their students.';\nexport const rules = 'If you are a mentor of Rolling scopes school you have to login in the right left corner with your \"github\" login. If you are not a mentor you can use login \"maximuk\".';\n","import React from 'react';\nimport { description, rules } from './data/data';\n\nconst container = {\n  maxWidth: 600,\n  height: 300,\n};\n\nconst pStyle = {\n  fontSize: 20,\n  textIndent: 20,\n};\n\nexport default function Info() {\n  return (\n    <div style={container}>\n      <p style={pStyle}>{description}</p>\n      <p style={pStyle}>{rules}</p>\n    </div>\n  );\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { instanceOf, string } from 'prop-types';\nimport Select from '../Select';\nimport Header1 from '../Header/index';\nimport { tableWraper, appStyle } from '../../styles/app';\nimport Designations from '../Designations';\nimport Info from '../Info';\nimport checkMentorName from './utils/checkMentorName';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { userStatus: 'unauthorised', userName: null, message: null };\n    this.changeUserPermission = this.changeUserPermission.bind(this);\n  }\n\n  /*\n    *This function examines if user is a mentor of Rolling scopes school.\n    Depend on mentor's checking  we set a permission of watching some part of application for user.\n  */\n  changeUserPermission(inputText) {\n    const { data } = this.props;\n    const { mentor } = data;\n\n    const checkedMentor = checkMentorName(inputText, mentor);\n    const { condition, mentorName } = checkedMentor;\n\n    if (condition) {\n      this.setState({ userStatus: 'authorised', userName: mentorName, message: null });\n    } if (!condition && (mentorName !== 'logout' || '')) {\n      this.setState({ userStatus: 'unauthorised', message: 'error' });\n    } else if (!condition) this.setState({ userStatus: 'unauthorised' });\n  }\n\n  render() {\n    const { userStatus, userName, message } = this.state;\n    const { data } = this.props;\n    let { name } = this.props;\n    const { allMentorsNames, mentor, tasks } = data;\n    // if name does not in localstorage yet\n    if (name === '') {\n      name = 'a-yatskevich';\n    }\n\n    return (\n      <div className=\"one\" style={appStyle}>\n        <Header1 changePermission={this.changeUserPermission} data={{ userStatus, userName, message }} />\n        {userStatus === 'unauthorised'\n          ? <Info />\n          : (\n            <div style={tableWraper}>\n              <Select data={allMentorsNames} name={name} tasks={tasks} mentors={mentor} />\n              <Designations />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  data: instanceOf(Object).isRequired,\n  name: string.isRequired,\n};\n\nexport default App;\n","/*\n*This function checks is mentor in mentor's collection.\n*/\nexport default function checkMentor(inputText, collection) {\n  let condition;\n  let mentorName;\n\n  if (inputText === null) {\n    condition = false;\n    mentorName = '';\n  }\n  mentorName = inputText.toLowerCase();\n  condition = collection[mentorName];\n\n  return { condition, mentorName };\n}\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-undef */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable no-undef */\nfunction getMentorFromLocalstorage() {\n  let value = localStorage.getItem('mentor-dashboard');\n  if (value) {\n    value = JSON.parse(value);\n    return value.mentorGithub;\n  }\n  return '';\n}\n\nexport default getMentorFromLocalstorage;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport { unregister } from './serviceWorker';\nimport mentorStudent from './mentor-student.json';\nimport getMentorFromLocalstorage from './Utils/getMentorFromLocalstorage';\n\nconst mentorGithub = getMentorFromLocalstorage();\n\nrender(<App name={mentorGithub} data={mentorStudent} />, document.getElementById('root'));\n\nunregister();\n"],"sourceRoot":""}